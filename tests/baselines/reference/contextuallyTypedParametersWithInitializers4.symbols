//// [tests/cases/compiler/contextuallyTypedParametersWithInitializers4.ts] ////

=== contextuallyTypedParametersWithInitializers4.ts ===
declare function test<
>test : Symbol(test, Decl(contextuallyTypedParametersWithInitializers4.ts, 0, 0))

  TContext,
>TContext : Symbol(TContext, Decl(contextuallyTypedParametersWithInitializers4.ts, 0, 22))

  TMethods extends Record<string, (ctx: TContext, ...args: (1 | 2)[]) => unknown>,
>TMethods : Symbol(TMethods, Decl(contextuallyTypedParametersWithInitializers4.ts, 1, 11))
>Record : Symbol(Record, Decl(lib.es5.d.ts, --, --))
>ctx : Symbol(ctx, Decl(contextuallyTypedParametersWithInitializers4.ts, 2, 35))
>TContext : Symbol(TContext, Decl(contextuallyTypedParametersWithInitializers4.ts, 0, 22))
>args : Symbol(args, Decl(contextuallyTypedParametersWithInitializers4.ts, 2, 49))

>(context: TContext, methods: TMethods): void;
>context : Symbol(context, Decl(contextuallyTypedParametersWithInitializers4.ts, 3, 2))
>TContext : Symbol(TContext, Decl(contextuallyTypedParametersWithInitializers4.ts, 0, 22))
>methods : Symbol(methods, Decl(contextuallyTypedParametersWithInitializers4.ts, 3, 20))
>TMethods : Symbol(TMethods, Decl(contextuallyTypedParametersWithInitializers4.ts, 1, 11))

test(
>test : Symbol(test, Decl(contextuallyTypedParametersWithInitializers4.ts, 0, 0))
  {
    count: 0,
>count : Symbol(count, Decl(contextuallyTypedParametersWithInitializers4.ts, 6, 3))

  },
  {
    checkLimit: (ctx, max = 3) => {},
>checkLimit : Symbol(checkLimit, Decl(contextuallyTypedParametersWithInitializers4.ts, 9, 3))
>ctx : Symbol(ctx, Decl(contextuallyTypedParametersWithInitializers4.ts, 10, 17))
>max : Symbol(max, Decl(contextuallyTypedParametersWithInitializers4.ts, 10, 21))

  },
);

