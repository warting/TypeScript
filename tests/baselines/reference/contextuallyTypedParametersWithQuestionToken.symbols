//// [tests/cases/compiler/contextuallyTypedParametersWithQuestionToken.ts] ////

=== contextuallyTypedParametersWithQuestionToken.ts ===
// https://github.com/microsoft/TypeScript/issues/54948

function acceptNum(num: number) {}
>acceptNum : Symbol(acceptNum, Decl(contextuallyTypedParametersWithQuestionToken.ts, 0, 0))
>num : Symbol(num, Decl(contextuallyTypedParametersWithQuestionToken.ts, 2, 19))

const f1: (a: string, b: number) => void = function self(a, b?) {
>f1 : Symbol(f1, Decl(contextuallyTypedParametersWithQuestionToken.ts, 4, 5))
>a : Symbol(a, Decl(contextuallyTypedParametersWithQuestionToken.ts, 4, 11))
>b : Symbol(b, Decl(contextuallyTypedParametersWithQuestionToken.ts, 4, 21))
>self : Symbol(self, Decl(contextuallyTypedParametersWithQuestionToken.ts, 4, 42))
>a : Symbol(a, Decl(contextuallyTypedParametersWithQuestionToken.ts, 4, 57))
>b : Symbol(b, Decl(contextuallyTypedParametersWithQuestionToken.ts, 4, 59))

  acceptNum(b); // error
>acceptNum : Symbol(acceptNum, Decl(contextuallyTypedParametersWithQuestionToken.ts, 0, 0))
>b : Symbol(b, Decl(contextuallyTypedParametersWithQuestionToken.ts, 4, 59))

  self("");
>self : Symbol(self, Decl(contextuallyTypedParametersWithQuestionToken.ts, 4, 42))

  self("", undefined);
>self : Symbol(self, Decl(contextuallyTypedParametersWithQuestionToken.ts, 4, 42))
>undefined : Symbol(undefined)

};

const f2: (a: string, b: number) => void = function self(a, b?: number) {
>f2 : Symbol(f2, Decl(contextuallyTypedParametersWithQuestionToken.ts, 10, 5))
>a : Symbol(a, Decl(contextuallyTypedParametersWithQuestionToken.ts, 10, 11))
>b : Symbol(b, Decl(contextuallyTypedParametersWithQuestionToken.ts, 10, 21))
>self : Symbol(self, Decl(contextuallyTypedParametersWithQuestionToken.ts, 10, 42))
>a : Symbol(a, Decl(contextuallyTypedParametersWithQuestionToken.ts, 10, 57))
>b : Symbol(b, Decl(contextuallyTypedParametersWithQuestionToken.ts, 10, 59))

  acceptNum(b); // error
>acceptNum : Symbol(acceptNum, Decl(contextuallyTypedParametersWithQuestionToken.ts, 0, 0))
>b : Symbol(b, Decl(contextuallyTypedParametersWithQuestionToken.ts, 10, 59))

  self("");
>self : Symbol(self, Decl(contextuallyTypedParametersWithQuestionToken.ts, 10, 42))

  self("", undefined);
>self : Symbol(self, Decl(contextuallyTypedParametersWithQuestionToken.ts, 10, 42))
>undefined : Symbol(undefined)

};

